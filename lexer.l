%{
// Generated by Bison
#include "parser.tab.h"
%}

%x EXPECT_STRING

DIGIT	[0-9]
META	[\[\]{},:]

%%

[ \t\r\n]+	{ /* Whitespace - ignore */ }

{DIGIT}+					return INTEGER_LITERAL;
null						return NULL_LITERAL;

	/*
	This one's a bit weird - instead of defining a lot of different tokens
	for meta-characters, we can define them all according to their ASCII
	value. This lets us use single-character literals as tokens in Bison!
	So what we're doing here is casting the first (and only) character of
	yytext to an int, and returning that - it gives us the character's ASCII
	value.
	*/
{META}	return (int) yytext[0];

	/*
	A catch-all that's not used in any parser rules, but gives undefined
	characters special attention. Not actually necessary.
	*/
.		return UNDEFINED;
